#+TITLE: IGT
#+DATE: 
#+AUTHOR: the author
#+EMAIL: the email
#+REVEAL_INIT_OPTIONS: width:1200, height:800, transition:'none'
#+REVEAL_ROOT: file:///Users/thibault/thib/reveal.js
#+OPTIONS: toc:1 reveal_single_file:t num:nil 
#+REVEAL_EXTRA_CSS: /Users/thibault/thib/reveal.js/local.css
#+REVEAL_THEME: simple 
# #+REVEAL_HLEVEL: 999 #minimum number of slides in first level
#+OPTIONS: author:nil date:nil email:nil
#+OPTIONS: timestamp:nil
#+OPTIONS: reveal_title_slide:auto 

:Options_R:
#+property: :session *R*
#+property: header-args:R :exports results
#+property: header-args:R :eval never-export
#+property: header-args:R+ :tangle yes
#+property: header-args:R+ :session
#+property: header-args:R+ :results output 
:end:

# clean output
#+begin_src emacs-lisp :exports none
   ;(org-babel-map-src-blocks nil (org-babel-remove-result))
#+end_src

#+RESULTS:

* Models


** Ligneul's (2019) Value plus Sequential Exploration (VSE) model:

Utility:  $v(\text{gain}, \text{loss}) = \text{gain}^\alpha - \text{loss}^\alpha$ ($\alpha \in [0,1]$) et $v(t) = v(gain(t),loss(t))$.

Exploitation: $\text{exploit}(t+1,k) = \delta \text{exploit}(t) + \eta(t,k)v(t)$ ($\delta\in [0,1]$, $\eta(t,k)=1$ if k is chosen at t, 0 otherwise)

Exploration: $\text{explore}(t+1,k) = (1-\eta(t,k))(\text{explore}(t,k)+\gamma(\varphi-\text{explore}(t,k)))$ ($\gamma \in [0,1]$, $\varphi \in \mathbb R$)

Choice: $Pr(\text{choice}(t) = d) = \text{softmax}(\theta(\text{explore}+\text{exploit}))$ ($\theta = 3^\beta-1$).


** VSE + noise

Wyart, Fiedling et al. type of model:

Exploitation: $\text{exploit}(t+1,k) = \delta \text{exploit}(t) + \eta(t,k)(v(t)+\zeta\varepsilon(t))$, with $\varepsilon \sim \mathcal N(0,|v(t)|^2)$ and $\zeta\in [0,2]$. 

** PVL-Delta
Utility:  $v(\text{gain}, \text{loss}) = \text{gain}^\alpha - \text{loss}^\alpha$ ($\alpha \in [0,1]) et $v(t) = v(gain(t)) - v(loss(t))$.

Exploitation: $\text{exploit}(t+1,k)=\text{exploit}(t,k) + \eta(t,k)  A  (v(t) -  \text{exploit}(t,k))$

Perseveration: $p(t+1,k) = \eta(t,k)$ (

Choice: $Pr(\text{choice}(t) = d) = \text{softmax}(\theta(\text{explore}) +\text{persev}p))$ ($\theta = 3^\beta-1$, $\text{persev}\in \mathbb R$).

** PVL-Delta + noise

Exploitation: $\text{exploit}(t+1,k) = \text{exploit}(t,k) + \eta(t,k)(A(v(t) -  \text{exploit}(t,k)) +\zeta\varepsilon(t))$, with $\varepsilon \sim \mathcal N(0,|v(t)|^2)$ and $\zeta\in [0,2]$. 

* Results

** Data

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
  rm(list=ls(all=TRUE))## efface les donn√©es
  source('~/thib/projects/tools/R_lib.r')
  setwd('~/thib/projects/IGT/data/')
  load('summary_indiv.rdata') ## summary.all
  load( 'pred_indiv.rdata') ## pred.all
  load('obs.rdata') ## obs.all
#+END_SRC

#+BEGIN_SRC R  :results output   :tangle yes  :session :exports results 
  pred.all <- pred.all %>%
      relocate(c(model, study, subjID), .before = 1)
  ## create an outlier variable
  ## = 1 if max(Rhat)>1.2 (fit did not converge), 0 otherwise
  outlier <- summary.all %>%
      group_by(model, study, subjID) %>%
      mutate(Rmax = max(Rhat, na.rm = T)) %>%
      mutate(outlier = ifelse(Rmax>1.2, 1,0)) %>%
      filter(param == 'alpha') %>%
      select(model, study, subjID, outlier) %>%
      ungroup()
  out  <- outlier %>%
      group_by(model, study) %>%
      summarise(outlier = sum(outlier, na.rm = TRUE)) %>%
      pivot_wider(names_from = model, values_from = outlier)
   #print(kable(out))
#+END_SRC

#+RESULTS:


** Prediction accuracy by study

#+BEGIN_SRC R  :results otuput  :tangle yes  :session :exports results 
  load('accuracy.rdata')
  a <- accuracy %>%
      rowwise() %>%
      mutate(acc = mean(c_across(starts_with("V")), na.rm = TRUE), .keep = "unused") %>%
      ungroup()
  accuracy <- merge(a, outlier)

  accuracy.summary <- accuracy %>%
      filter(outlier == 0) %>%
      group_by(model,study) %>%
      summarise(acc = mean(acc, na.rm = TRUE)*100)
  a.summary <- accuracy.summary %>%
    pivot_wider(names_from = model, values_from = acc) 
  print(kable(a.summary, digits = 2))
#+END_SRC

#+RESULTS:
#+begin_example


|study             |   pvl| pvl_noise|   vse| vse_noise|
|:-----------------|-----:|---------:|-----:|---------:|
|Fridberg          | 48.63|     49.75| 52.07|     51.79|
|Horstmann         | 56.90|     56.67| 59.36|     58.98|
|human             | 56.18|     55.84| 56.98|     56.86|
|Kjome             | 48.58|     48.58| 53.79|     53.11|
|Maia              | 61.92|     61.95| 63.75|     63.78|
|mice              | 46.04|     47.32| 47.61|     47.81|
|Premkumar         | 55.04|     55.68| 57.48|     58.08|
|Steingroever2011  | 65.19|     65.17| 66.58|     66.95|
|SteingroverInPrep | 62.29|     62.29| 64.09|     64.07|
|Wetzels           | 58.28|     57.89| 59.93|     60.29|
|Wood              | 49.19|     49.72| 53.54|     53.50|
|Worthy            | 51.34|     51.06| 58.74|     58.94|
#+end_example





** Prediction accuracy (average)

#+BEGIN_SRC R  :results output  :tangle yes  :session :exports results 
  accuracy.summary <- accuracy %>%
      filter(outlier == 0) %>%
      group_by(model) %>%
      summarise(acc = mean(acc, na.rm = TRUE)*100)
  a.summary <- accuracy.summary %>%
    pivot_wider(names_from = model, values_from = acc) 
  print(kable(a.summary, digits = 2))
#+END_SRC

#+RESULTS:
: 
: 
: |   pvl| pvl_noise|   vse| vse_noise|
: |-----:|---------:|-----:|---------:|
: | 55.38|     55.51| 58.22|     58.17|


** AIC (By study)


#+BEGIN_SRC R  :results output  :tangle yes  :session :exports results 
  d <- summary.all %>%
    mutate(k = case_when(
	     model == 'vse' ~ 5,
	     model == 'vse_noise' ~6,
	     model == 'pvl' ~ 4,
	     model == 'pvl_noise' ~ 5
	   )) %>%
      group_by(study, model, subjID) %>%
      mutate(Rmax = max(Rhat, na.rm = T)) %>%
      mutate(outlier = ifelse(Rmax>1.2, 1,0)) %>%
      filter(outlier == 0) %>%
      mutate(AIC = -2*l + 2*k) %>%
      ungroup()

  aic.summary <- d %>%
    group_by(model, study) %>%
    summarise(AIC = mean(AIC)) %>%
    pivot_wider(names_from = model, values_from = AIC) 
  print(kable(aic.summary, digits = 1))
#+END_SRC

#+RESULTS:
#+begin_example


|study             |   pvl| pvl_noise|   vse| vse_noise|
|:-----------------|-----:|---------:|-----:|---------:|
|Fridberg          | 229.8|     229.9| 227.9|     230.2|
|Horstmann         | 212.5|     214.8| 207.8|     210.0|
|human             | 423.8|     424.3| 412.0|     414.4|
|Kjome             | 237.4|     240.1| 226.4|     229.1|
|Maia              | 200.5|     202.6| 193.8|     195.9|
|mice              | 246.6|     246.7| 245.9|     247.4|
|Premkumar         | 223.2|     224.8| 215.8|     218.1|
|Steingroever2011  | 269.0|     270.8| 255.2|     256.0|
|SteingroverInPrep | 197.7|     199.4| 190.2|     192.0|
|Wetzels           | 315.5|     316.1| 303.0|     305.1|
|Wood              | 232.8|     235.2| 225.9|     228.2|
|Worthy            | 230.4|     230.4| 208.6|     210.5|
#+end_example


** AIC (By model)


#+BEGIN_SRC R  :results output  :tangle yes  :session :exports results 
  aic.summary <- d %>%
    group_by(model) %>%
    filter(outlier == 0) %>%
    summarise(AIC = mean(AIC)) %>%
    pivot_wider(names_from = model, values_from = AIC) 
  print(kable(aic.summary, digits = 1))

#+END_SRC

#+RESULTS:
: 
: 
: |   pvl| pvl_noise|   vse| vse_noise|
: |-----:|---------:|-----:|---------:|
: | 241.9|     243.6| 233.6|     235.6|


* Parameters

** Overview (mean)
#+BEGIN_SRC R  :results output  :tangle yes  :session :exports results 
  d.param <- d %>%
    mutate(species = ifelse(study == 'mice', 'mice', 'human')) %>%
    filter(outlier == 0) %>%
    select(model, param, mean, study, species) %>%
    group_by(param, model, species) %>%
    summarise(mean = mean(mean, na.rm = TRUE)) %>%
    pivot_wider(names_from = param, values_from = mean) 
  print(kable(d.param, digit = 2))
#+END_SRC

#+RESULTS:
#+begin_example


|model     |species |    A| alpha| cons| delta| gamma| persev|   phi| zeta|
|:---------|:-------|----:|-----:|----:|-----:|-----:|------:|-----:|----:|
|pvl       |human   | 0.48|  0.42| 0.79|    NA|    NA|   0.73|    NA|   NA|
|pvl       |mice    | 0.19|  1.04| 0.73|    NA|    NA|   0.23|    NA|   NA|
|pvl_noise |human   | 0.54|  0.42| 0.66|    NA|    NA|   0.72|    NA| 2.05|
|pvl_noise |mice    | 0.24|  0.95| 0.48|    NA|    NA|   0.21|    NA| 2.04|
|vse       |human   |   NA|  0.39| 0.73|  0.52|  0.48|     NA| -0.05|   NA|
|vse       |mice    |   NA|  0.75| 0.12|  0.77|  0.49|     NA| -0.17|   NA|
|vse_noise |human   |   NA|  0.43| 0.68|  0.53|  0.48|     NA| -0.14| 0.28|
|vse_noise |mice    |   NA|  0.72| 0.11|  0.78|  0.49|     NA| -0.20| 0.61|
#+end_example


** Overview (median)
#+BEGIN_SRC R  :results output  :tangle yes  :session :exports results 
  d.param <- d %>%
    mutate(species = ifelse(study == 'mice', 'mice', 'human')) %>%
    filter(outlier == 0) %>%
    select(model, param, mean, study, species) %>%
    group_by(param, model, species) %>%
    summarise(median = median(mean, na.rm = TRUE)) %>%
    pivot_wider(names_from = param, values_from = median) 
  print(kable(d.param, digit = 2))
#+END_SRC

#+RESULTS:
#+begin_example


|model     |species |    A| alpha| cons| delta| gamma| persev|   phi| zeta|
|:---------|:-------|----:|-----:|----:|-----:|-----:|------:|-----:|----:|
|pvl       |human   | 0.47|  0.30| 0.72|    NA|    NA|   0.74|    NA|   NA|
|pvl       |mice    | 0.11|  0.98| 0.61|    NA|    NA|   0.21|    NA|   NA|
|pvl_noise |human   | 0.54|  0.31| 0.58|    NA|    NA|   0.74|    NA| 1.77|
|pvl_noise |mice    | 0.17|  0.99| 0.35|    NA|    NA|   0.23|    NA| 1.35|
|vse       |human   |   NA|  0.29| 0.68|  0.51|  0.47|     NA| -0.14|   NA|
|vse       |mice    |   NA|  0.74| 0.10|  0.86|  0.50|     NA| -0.13|   NA|
|vse_noise |human   |   NA|  0.32| 0.62|  0.51|  0.47|     NA| -0.24| 0.20|
|vse_noise |mice    |   NA|  0.64| 0.09|  0.88|  0.50|     NA| -0.14| 0.60|
#+end_example



** Test parameters

Mean (t-test)

#+BEGIN_SRC R  :results output  :tangle yes  :session :exports results 
  d.comp <- d %>%
    mutate(species = ifelse(study == 'mice', 'mice', 'human')) %>%
    filter(outlier == 0)
  d.ttest <- data.frame(model = character(), param = character(), pval = numeric())
  for (m in c('vse','vse_noise','pvl','pvl_noise')){
    if (m == 'vse'){
      p <-  c('alpha', 'cons', 'gamma', 'delta', 'phi')
    }else if (m == 'vse_noise'){
      p <- c('alpha', 'cons', 'gamma', 'delta', 'phi', 'zeta')
    }else if (m == 'pvl'){
      p <- c('alpha', 'A', 'persev', 'cons')
    }else if (m == 'pvl_noise'){
      p <-  c('alpha', 'A', 'persev', 'cons', 'zeta')
    }
    for (pp in p){
    mice <- d.comp %>% filter(species == 'mice', param == pp, model == m) 
    human <- d.comp %>% filter(species == 'human', param == pp, model == m)
    p.value = t.test(mice$mean, human$mean, paired=FALSE)$p.value
    ##bf.value <- extractBF(bf)$bf    
    d.ttest <- d.ttest %>%
      add_row(param = pp, model = m, pval = p.value)
    }
  }

  d.ttest <- d.ttest %>%  pivot_wider(names_from = param, values_from = pval)
  print(kable(d.ttest, digit = 4))

#+END_SRC 

#+RESULTS:
: 
: 
: |model     | alpha|   cons|  gamma| delta|    phi|   zeta|  A| persev|
: |:---------|-----:|------:|------:|-----:|------:|------:|--:|------:|
: |vse       |     0| 0.0000| 0.4266|     0| 0.2522|     NA| NA|     NA|
: |vse_noise |     0| 0.0000| 0.4088|     0| 0.5549| 0.0000| NA|     NA|
: |pvl       |     0| 0.4907|     NA|    NA|     NA|     NA|  0|      0|
: |pvl_noise |     0| 0.0050|     NA|    NA|     NA| 0.9696|  0|      0|


#+BEGIN_SRC R  :results output  :tangle yes  :session :exports results 
  d.comp <- d %>%
    mutate(species = ifelse(study == 'mice', 'mice', 'human')) %>%
    filter(outlier == 0)
  d.test <- data.frame(model = character(), param = character(), pval = numeric())
  for (m in c('vse','vse_noise','pvl','pvl_noise')){
    if (m == 'vse'){
      p <-  c('alpha', 'cons', 'gamma', 'delta', 'phi')
    }else if (m == 'vse_noise'){
      p <- c('alpha', 'cons', 'gamma', 'delta', 'phi', 'zeta')
    }else if (m == 'pvl'){
      p <- c('alpha', 'A', 'persev', 'cons')
    }else if (m == 'pvl_noise'){
      p <-  c('alpha', 'A', 'persev', 'cons', 'zeta')
    }
    for (pp in p){
    mice <- d.comp %>% filter(species == 'mice', param == pp, model == m) 
    human <- d.comp %>% filter(species == 'human', param == pp, model == m)
    test = mood.test(mice$mean, human$mean, paired=FALSE)
    p.value <- test$p.value
    d.test <- d.test %>%
      add_row(param = pp, model = m, pval = p.value)
    }
  }

  d.test <- d.test %>%  pivot_wider(names_from = param, values_from = pval)
  print(kable(d.test, digit = 4))
#+END_SRC 

Median (Mood's test)

#+RESULTS:
: 
: 
: |model     |  alpha|   cons| gamma|  delta| phi| zeta|  A| persev|
: |:---------|------:|------:|-----:|------:|---:|----:|--:|------:|
: |vse       | 0.0018| 0.0000|     0| 0.0033|   0|   NA| NA|     NA|
: |vse_noise | 0.2389| 0.0000|     0| 0.0003|   0|    0| NA|     NA|
: |pvl       | 0.0000| 0.0000|    NA|     NA|  NA|   NA|  0|      0|
: |pvl_noise | 0.0000| 0.0652|    NA|     NA|  NA|    0|  0|      0|





